{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/GNAME","path":"GNAME","modified":1,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/alipay.jpg","path":"images/donate/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/weipay.jpg","path":"images/donate/weipay.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/weipayimg.png","path":"images/donate/weipayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/GNAME","hash":"16793b6e4a8fdb039ae8b5c8431ce736b67094f1","modified":1516093826410},{"_id":"themes/pure/.gitignore","hash":"204766bf9e2d6fe1fce5b9b02b8edfac2d235830","modified":1516093826494},{"_id":"themes/pure/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1516093826498},{"_id":"themes/pure/README.cn.md","hash":"33aee65ea5b794cf660993cbec14939039e1c7cd","modified":1516093826498},{"_id":"themes/pure/README.md","hash":"34de1a83ee508641a534d12f51eea9b31b491acb","modified":1516093826498},{"_id":"themes/pure/_config.yml","hash":"015ea862add41e5f04bbbd02630f64e3bd55f8b7","modified":1516158879568},{"_id":"themes/pure/_config.yml.example","hash":"8188c5872beda57fd165bf5adcea3b648f7e6780","modified":1516093826502},{"_id":"themes/pure/package.json","hash":"d5bad0f074925c46e8ee5a75d385346d2fcea850","modified":1516093826646},{"_id":"source/404/index.md","hash":"1205cc8564e2e824e7c2940045abca83d8e09f0d","modified":1516093826374},{"_id":"source/_posts/hexo_config.md","hash":"68b0af6610928361dbfd53cccbfed7d790f2a088","modified":1516096194897},{"_id":"source/_posts/linux_touch_time.md","hash":"c4749976e03d8b2eff12273a1412a3b342274788","modified":1516158279101},{"_id":"source/_posts/pachong_luanma.md","hash":"b5c2b82e4812fc789ecfae2175c132e7f6dcc8ce","modified":1516156068042},{"_id":"source/_posts/python_pachong.md","hash":"a7f810e16c07401df68786609cb061e2885b45c1","modified":1516156175568},{"_id":"source/about/index.md","hash":"b72470146e8244886e15715e0cae79b4130305e8","modified":1516093826386},{"_id":"source/categories/index.md","hash":"b0006184ce9570766e7c7507d20fede1079f4992","modified":1516093826386},{"_id":"source/books/index.md","hash":"d913d58987f539ac2ca4cca366ebf42f8b1a03d1","modified":1516093826366},{"_id":"source/links/index.md","hash":"d768332d0d322fe39267dbbda05b931488c27d7e","modified":1516093826390},{"_id":"source/repository/index.md","hash":"bf2bec13066d7d53fc05a334876eb482e6f95825","modified":1516093826390},{"_id":"source/tags/index.md","hash":"c35ba8af5acf41102909a9f9c1349a24d89f97a6","modified":1516093826394},{"_id":"themes/pure/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1516093826494},{"_id":"themes/pure/.git/config","hash":"7dba24ba57e81cd54684ccd801f8bd890eb9bd78","modified":1516093826482},{"_id":"themes/pure/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1516093826430},{"_id":"themes/pure/.git/index","hash":"ed4c9d52f45f1c0d522170b18d371d5eae9dd47a","modified":1516093826454},{"_id":"themes/pure/.git/packed-refs","hash":"0f0cda8d40b5879f82f5a149413c608bb44851d9","modified":1516093826482},{"_id":"themes/pure/languages/default.yml","hash":"85fe624fee25fe9871c8d9f10feda77c9ca8b4a7","modified":1516093826530},{"_id":"themes/pure/languages/en.yml","hash":"85fe624fee25fe9871c8d9f10feda77c9ca8b4a7","modified":1516093826530},{"_id":"themes/pure/languages/zh-CN.yml","hash":"5474cc8184a7f4709c540a284b9acdff43d4a71b","modified":1516093826534},{"_id":"themes/pure/languages/zh-TW.yml","hash":"2422a43236e5dad1c6d17e401e4e820a385e9666","modified":1516093826534},{"_id":"themes/pure/layout/about.ejs","hash":"4b64515ccc801cc9eba637a1e1909c6c4dd203f6","modified":1516093826626},{"_id":"themes/pure/layout/archive.ejs","hash":"90fa5b0d8f081d0bde33b2784f66e6a80e5b0dac","modified":1516093826630},{"_id":"themes/pure/layout/books.ejs","hash":"75cbd31d3551c730e8a683bd5b08562881a95b51","modified":1516093826630},{"_id":"themes/pure/layout/categories.ejs","hash":"2adc0847776437f583f5222195462ec54bb21abf","modified":1516093826630},{"_id":"themes/pure/layout/category.ejs","hash":"6e7024e5099dff8bc803b327a5683a93e248460f","modified":1516093826634},{"_id":"themes/pure/layout/index.ejs","hash":"44418dbf1fb82392b8e1e4cc910d16a383190433","modified":1516093826634},{"_id":"themes/pure/layout/layout.ejs","hash":"46efc1b25a9950bf37220820230ba05e1da8b564","modified":1516093826634},{"_id":"themes/pure/layout/links.ejs","hash":"ee90a5f2a9d19bc02682ea3a59177b947f7f7284","modified":1516093826638},{"_id":"themes/pure/layout/page.ejs","hash":"fbfed3c882059e757b23ff57924400683631594b","modified":1516093826638},{"_id":"themes/pure/layout/post.ejs","hash":"fbfed3c882059e757b23ff57924400683631594b","modified":1516093826638},{"_id":"themes/pure/layout/repository.ejs","hash":"0ecad33b6c1ec741eb3b02bb47a3824ac3749d09","modified":1516093826642},{"_id":"themes/pure/layout/tag.ejs","hash":"643b4edaf27dea7c3da262fe69c85e056a2c68ec","modified":1516093826646},{"_id":"themes/pure/layout/tags.ejs","hash":"cade9f903fb1f47ff0c8ff2c42875a0af26cfd76","modified":1516093826646},{"_id":"themes/pure/scripts/thumbnail.js","hash":"4a7385e533f3567758bc995a8be5eb3e7839ac9c","modified":1516093826662},{"_id":"themes/pure/source/favicon.png","hash":"79a9b4f6161f153208b02246c326eecf3095e79d","modified":1516093826666},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1516093826650},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1516093826650},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1516093826654},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1516093826646},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1516093826654},{"_id":"themes/pure/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1516093826430},{"_id":"themes/pure/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1516093826438},{"_id":"themes/pure/.git/hooks/fsmonitor-watchman.sample","hash":"a04bcd7925e722826245dd3085ddbc739ccf12ac","modified":1516093826438},{"_id":"themes/pure/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1516093826438},{"_id":"themes/pure/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1516093826438},{"_id":"themes/pure/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1516093826442},{"_id":"themes/pure/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1516093826442},{"_id":"themes/pure/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1516093826442},{"_id":"themes/pure/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1516093826442},{"_id":"themes/pure/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1516093826446},{"_id":"themes/pure/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1516093826446},{"_id":"themes/pure/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1516093826446},{"_id":"themes/pure/.git/logs/HEAD","hash":"0b1dc497e7f916b7c25939c6e3925ff34ca65ec3","modified":1516093826494},{"_id":"themes/pure/_source/404/index.md","hash":"fb58a91d86a25a0b8798555899e847d237cf1b44","modified":1516093826506},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"eef9b025c2a81fdc714967d0c7b21bed9d55cff5","modified":1516093826510},{"_id":"themes/pure/_source/_data/links.yml","hash":"a5e31f35ebb8e1e8811f2e3d957cf4d4835aa2f9","modified":1516093826510},{"_id":"themes/pure/_source/about/index.md","hash":"b72470146e8244886e15715e0cae79b4130305e8","modified":1516093826514},{"_id":"themes/pure/_source/books/index.md","hash":"d913d58987f539ac2ca4cca366ebf42f8b1a03d1","modified":1516093826518},{"_id":"themes/pure/_source/categories/index.md","hash":"b0006184ce9570766e7c7507d20fede1079f4992","modified":1516093826518},{"_id":"themes/pure/_source/links/index.md","hash":"d768332d0d322fe39267dbbda05b931488c27d7e","modified":1516093826522},{"_id":"themes/pure/_source/repository/index.md","hash":"bf2bec13066d7d53fc05a334876eb482e6f95825","modified":1516093826526},{"_id":"themes/pure/_source/tags/index.md","hash":"c35ba8af5acf41102909a9f9c1349a24d89f97a6","modified":1516093826526},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"caec54ce31577207e1fd31aefa017bde99a8027c","modified":1516093826538},{"_id":"themes/pure/layout/_common/head.ejs","hash":"ebe13105099db22d00b43350467065841af82134","modified":1516093826538},{"_id":"themes/pure/layout/_common/plugin.ejs","hash":"eaeb2f1f16a6e48c9c8d5f62af8891173d82c30d","modified":1516093826542},{"_id":"themes/pure/layout/_common/header.ejs","hash":"1dbc6e7532a17981d7e28f86e2aae932f7c15961","modified":1516093826542},{"_id":"themes/pure/layout/_common/script.ejs","hash":"5cf5129affc7c5d0c5d5d5fba6d84ac8f9f86422","modified":1516093826542},{"_id":"themes/pure/layout/_common/social.ejs","hash":"2bcdc7b0ee3905e724b01c2efa1ca6b47a846e1f","modified":1516093826546},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"8c8be1988c1d12f6e824e3b1de96bad23e19c3e0","modified":1516093826546},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"4be88eec64fd40c7e1b74df8ccb6c8cdfa3e7a17","modified":1516093826550},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"a8a387f9e7289a6524cf46d7ab76c34fff37f4bf","modified":1516093826550},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"e4810f8e03986d5a8afdf4c0932814a3d0db9ffe","modified":1516093826554},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"513892fae41de4e68963c95a9358285714274bb4","modified":1516093826554},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"6408e37ec1a8ee868cf36d5b0e020d5d97ea2f27","modified":1516093826554},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"db8cba32bf6655a8d21fe8c8ccd0695b049e1d4c","modified":1516093826558},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"c196b54f92eff017a48e02bacc029dd82edc8cf9","modified":1516093826558},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"47bbb53fe9cca05928c45782c6897c8a94d597ff","modified":1516093826558},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"4fa4587a0fd8687ecc7a8e3ff9b12a607b3b7c29","modified":1516093826562},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"402962ba1da10865045d8bc61d1a05f28af29b5b","modified":1516093826562},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"9105ff88a6fa026e78541e608ebc02e355be26f5","modified":1516093826566},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"be30d7eb0b391759ac329b8a7b410d758ff8b032","modified":1516093826586},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"335a906404dada013d83508244e992c7a26fa879","modified":1516093826586},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"a6662f79f7fd6f1cc9b5180672ba8e1d0192fbe2","modified":1516093826590},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"1e4bad0e7d04352e3634994f413c16b0001efa4a","modified":1516093826610},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"7a64d98212769423425102a441fca52eb6930fff","modified":1516093826614},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"b67f5d87bd9d53bc1a43da89b3bc32cc7d3d42d8","modified":1516093826614},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"6b5cc1ef09d1602a526d67ad7a8ba1c995fbb597","modified":1516093826614},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"89848cc8e0190ca76cc26d42c6880a23e370702e","modified":1516093826618},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"5e9a5cc9bdc05fabf939db494c3937cc0df48a72","modified":1516093826618},{"_id":"themes/pure/layout/_search/index.ejs","hash":"2c1f06dac5710e5fd073f3e5739545f3f6a0a56f","modified":1516093826618},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"14b1ec0bdb911ab6d92046c78d371264afc4fb19","modified":1516093826618},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"dc548a83c33b5a598683bf2e1cb723bc3be4a76b","modified":1516093826622},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"b250fb0f63286f9648cd8bf428bed6a88901b481","modified":1516093826622},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"28c1059e922407051de9f369d09fe72b49915a3b","modified":1516093826622},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"83c8ce4b099951d58b2be5006f6963afbbe7d4e9","modified":1516093826622},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8932ce5283a7e6a356c6840104a7d6984f2ea986","modified":1516093826626},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"24823a881a6c15fd846c7f4780eb90fe869a813b","modified":1516093826626},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"e6967ec160b93a5f466a73a36745833e644d04c0","modified":1516093826626},{"_id":"themes/pure/source/fonts/README.md","hash":"b5b2aac1b36a86dac2217d242d650e026c5a3b0c","modified":1516093826670},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6c0c276a9ce023d569208e69e642583562745810","modified":1516093826670},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"c27cba6f2d2710c677f79fbe59480ec0c3535875","modified":1516093826674},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"9e4123792f885b8e61c916b0a8f5e6176f916945","modified":1516093826674},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1516093826678},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1516093826686},{"_id":"themes/pure/source/js/application.js","hash":"637128440b40ceac55c74850f0e2648c647cd487","modified":1516093826690},{"_id":"themes/pure/source/js/application.min.js","hash":"e5ae432339928ee0166ec444bcc5e12065944f3d","modified":1516093826690},{"_id":"themes/pure/source/js/insight.js","hash":"a1b773d9ce470bf0e2f8fdca1b6fac2ac3d31aeb","modified":1516093826694},{"_id":"themes/pure/source/js/jquery.min.js","hash":"dacc1f76630a9708add066819b1aabf8dce01056","modified":1516093826694},{"_id":"themes/pure/source/js/plugin.min.js","hash":"f41176dfdd685f68de6cba66fe500014a5342ce1","modified":1516093826698},{"_id":"themes/pure/.git/refs/heads/master","hash":"ce8151129b242b983f344bc4fcb3c72330a9fcc5","modified":1516093826450},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"20ef0d47ec3d2de7d94db9778ddac092dc2bd4b5","modified":1516093826570},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"426855ae330ba403818170fac6e4ba89cc7f4c77","modified":1516093826570},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"e2180ba37bd5ec5d774e50e49e48daf086676db6","modified":1516093826570},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"8cbaef422bd7f3d1581d1198dd1c36e4c0e1e46e","modified":1516093826574},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"2c5ec5785f4abc08e081123848531c4912c65fd8","modified":1516093826574},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1516093826578},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"db441deadb5628c82bc5796e3238da9c77ba36ae","modified":1516093826578},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"29fa1058465c5e7ef5e707c2a85f874c95c07a84","modified":1516093826582},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"0d8b9a3aeaed95b74e292c593f0a8225711bfdca","modified":1516093826582},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"8fd470b8d52606a90d475f7da9dbbed32742b1c9","modified":1516093826582},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1516093826586},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"81e9a89734505f54fef83dc74d2e277dab1bfa75","modified":1516093826586},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"829778c19025882fe73cf1b297a36a9d0eff39a1","modified":1516093826590},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"4557389e499b89982eb005a821208fdd3dbac627","modified":1516093826594},{"_id":"themes/pure/layout/_script/_analytics/script.ejs","hash":"9d8afb9316326dd4f2dc8d0489907a8c17887e34","modified":1516093826594},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"b425f8c174e8cc0853d6f9c095cf3c5ffcddb37e","modified":1516093826598},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"ef355fd33e4f2fa230769acb42c307fad0fffade","modified":1516093826598},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"4977930e0982a396c08a6712f19d2579ad2503dd","modified":1516093826602},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"de7d9de6e7785a6ca9d00997a03a49d4752b5bb7","modified":1516093826602},{"_id":"themes/pure/layout/_script/_comment/script.ejs","hash":"f81d2f4c93ce7ade17a3978b6b0cf2c8e1d80609","modified":1516093826606},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"68ad92beaaffd863a473fea316cd2848561b5e9e","modified":1516093826606},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"72b48dcaab830b615c71f6e810e96100b715c682","modified":1516093826610},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"f95c3289c03fa084afce64e3c399cb5127707f56","modified":1516093826610},{"_id":"themes/pure/source/css/style.css","hash":"537ba2fff00ce31c432f4d32ee77c78010ceb022","modified":1516093826666},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"ea6a275273d7632734b320a55c825181fbfea81a","modified":1516093826674},{"_id":"themes/pure/source/images/donate/alipay.jpg","hash":"8a5b2c72ddb7396adb709771a35ef50b8cf5485e","modified":1516093826678},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1516093826678},{"_id":"themes/pure/source/images/donate/weipay.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1516093826682},{"_id":"themes/pure/source/images/donate/weipayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1516093826682},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1516093826686},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1516093826686},{"_id":"themes/pure/.git/objects/pack/pack-b9a32d2bdd2da09f1d7bf2044756e3d441e2bd53.idx","hash":"285620e02b51a7a76aa7622c082c9e52c0983bee","modified":1516093826458},{"_id":"themes/pure/.git/logs/refs/heads/master","hash":"0b1dc497e7f916b7c25939c6e3925ff34ca65ec3","modified":1516093826490},{"_id":"themes/pure/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1516093826454},{"_id":"themes/pure/.git/logs/refs/remotes/origin/HEAD","hash":"0b1dc497e7f916b7c25939c6e3925ff34ca65ec3","modified":1516093826486},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1516093826662},{"_id":"themes/pure/.git/objects/pack/pack-b9a32d2bdd2da09f1d7bf2044756e3d441e2bd53.pack","hash":"22013d94aef7cd1aa2060d16a5110bd80e8a5db4","modified":1516093826478}],"Category":[{"name":"python","_id":"cjcihuyfs0004wc9ofj7np1sw"},{"name":"linux","_id":"cjcihuyhv000bwc9obbmyjolx"}],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://blog.cofess.com\" homePageName=\"回到我的主页\"></script>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://blog.cofess.com\" homePageName=\"回到我的主页\"></script>\n","date":"2018-01-16T09:10:26.374Z","updated":"2018-01-16T09:10:26.374Z","path":"/404.html","layout":"page","_id":"cjcihuye00000wc9opoc57gwv","content":"<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://blog.cofess.com\" homepagename=\"回到我的主页\"></script>\n","site":{"data":{}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://blog.cofess.com\" homepagename=\"回到我的主页\"></script>\n"},{"title":"关于","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":"个人详细介绍","source":"about/index.md","raw":"---\ntitle: 关于\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n个人详细介绍","date":"2018-01-16T09:10:26.386Z","updated":"2018-01-16T09:10:26.386Z","path":"about/index.html","_id":"cjcihuyf80002wc9ogwvlenfw","content":"<p>个人详细介绍</p>\n","site":{"data":{}},"excerpt":"","more":"<p>个人详细介绍</p>\n"},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2018-01-16T09:10:26.386Z","updated":"2018-01-16T09:10:26.386Z","path":"categories/index.html","_id":"cjcihuygf0006wc9oagz9g9gn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"书单","layout":"books","comments":0,"sidebar":"none","_content":"","source":"books/index.md","raw":"---\ntitle: 书单\nlayout: books\ncomments: false\nsidebar: none\n---","date":"2018-01-16T09:10:26.366Z","updated":"2018-01-16T09:10:26.366Z","path":"books/index.html","_id":"cjcihuygq0008wc9oaof8mnqm","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"友情链接","layout":"links","comments":1,"sidebar":"none","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\nlayout: links\ncomments: true\nsidebar: none\n---","date":"2018-01-16T09:10:26.390Z","updated":"2018-01-16T09:10:26.390Z","path":"links/index.html","_id":"cjcihuyhr000awc9o83h6kom0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2018-01-16T09:10:26.390Z","updated":"2018-01-16T09:10:26.390Z","path":"repository/index.html","_id":"cjcihuyhz000ewc9o4ng7a7l1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2018-01-16T09:10:26.394Z","updated":"2018-01-16T09:10:26.394Z","path":"tags/index.html","_id":"cjcihuyi7000fwc9oacd97yse","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Python和微信之获取好友昵称并制作wordcloud","_content":"\n\n\n\n\n最近看到网上有人用Python获取微信的一些信息，感觉挺有意思，对于我一个Python刚入门的人来说，正需要一些代码片段来激起我的兴趣，所以自己也写了一些，废话不多说，直接上代码！！！\n\n```\n\ncoding:utf-8\n微信好友昵称WordCloud\nimport itchat\nimport re\nimport os\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, ImageColorGenerator\nimport numpy as np\nimport PIL.Image as Image\nimport jieba\nimport time\n#以上是我用到的一些库，这些根据个人不同需要安装某些库\n\n#运行到此处会自动生成一个二维码，打开手机微信，扫一扫即可登录\nitchat.login()\t\nfriends = itchat.get_friends(update=True)[0:]\ntList = []\n\n\nfor i in friends:\n\t#用正则表达式过滤掉 span ，class，emoji。NickName表示微信好友的昵称；\n\tsignature = i[\"NickName\"].strip().replace(\"span\",\"\").replace(\"class\",\"\").replace(\"emoji\",\"\")\n\trep = re.compile(\"1f\\d.+\")\n\tsignature = rep.sub(\"\",signature)\n\tprint signature\n\ttList.append(signature)\n\n\n#拼接字符串\ntext = \"\".join(tList)\n\n#jieba分词\nwordlist_jieba = jieba.cut(text,cut_all=True)\nwl_space_split = \" \".join(wordlist_jieba)\n\n#wordcloud\nd = os.path.dirname(__file__)\nalice_coloring = np.array(Image.open(os.path.join(d,\"hot.png\")))\t#设置一个背景图片，文章中会附上\nmy_wordcloud = WordCloud(background_color=\"white\",max_words=2000,mask=alice_coloring,max_font_size=37, random_state=42,\nfont_path=\"./handan.ttf\").generate(wl_space_split)\t\n#此处使用的字体一定是支持中文的字体，当然，如果你确定你好友的昵称都是英文，那么请忽略，字体的路径可以是相对路径，也可以是你的系统字体\n\nimage_colors = ImageColorGenerator(alice_coloring)\nplt.imshow(my_wordcloud.recolor(color_func=image_colors))\nplt.imshow(my_wordcloud)\nplt.axis(\"off\")\nplt.show()\ntime.sleep(3)\nplt.close()\t#图片关闭后将图片发送至手机,保存图片，并发送至手机\nmy_wordcloud.to_file(os.path.join(d, \"wechat_cloud.png\"))\nitchat.send_image(\"wechat_cloud.png\", 'filehelper')\n```\n至此，打开你的手机，进入到文件传输助手，你会收到一张图片，这就是使用微信好友昵称制作的词云，下面附上一张我本人的\n![这里写图片描述](http://img.blog.csdn.net/20170721154128645?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n![这里写图片描述](http://img.blog.csdn.net/20170721154156691?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n","source":"_posts/hexo_config.md","raw":"---\n\ntitle: Python和微信之获取好友昵称并制作wordcloud\ntags: wordcloud\ncategories: python\n\n---\n\n\n\n\n\n最近看到网上有人用Python获取微信的一些信息，感觉挺有意思，对于我一个Python刚入门的人来说，正需要一些代码片段来激起我的兴趣，所以自己也写了一些，废话不多说，直接上代码！！！\n\n```\n\ncoding:utf-8\n微信好友昵称WordCloud\nimport itchat\nimport re\nimport os\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, ImageColorGenerator\nimport numpy as np\nimport PIL.Image as Image\nimport jieba\nimport time\n#以上是我用到的一些库，这些根据个人不同需要安装某些库\n\n#运行到此处会自动生成一个二维码，打开手机微信，扫一扫即可登录\nitchat.login()\t\nfriends = itchat.get_friends(update=True)[0:]\ntList = []\n\n\nfor i in friends:\n\t#用正则表达式过滤掉 span ，class，emoji。NickName表示微信好友的昵称；\n\tsignature = i[\"NickName\"].strip().replace(\"span\",\"\").replace(\"class\",\"\").replace(\"emoji\",\"\")\n\trep = re.compile(\"1f\\d.+\")\n\tsignature = rep.sub(\"\",signature)\n\tprint signature\n\ttList.append(signature)\n\n\n#拼接字符串\ntext = \"\".join(tList)\n\n#jieba分词\nwordlist_jieba = jieba.cut(text,cut_all=True)\nwl_space_split = \" \".join(wordlist_jieba)\n\n#wordcloud\nd = os.path.dirname(__file__)\nalice_coloring = np.array(Image.open(os.path.join(d,\"hot.png\")))\t#设置一个背景图片，文章中会附上\nmy_wordcloud = WordCloud(background_color=\"white\",max_words=2000,mask=alice_coloring,max_font_size=37, random_state=42,\nfont_path=\"./handan.ttf\").generate(wl_space_split)\t\n#此处使用的字体一定是支持中文的字体，当然，如果你确定你好友的昵称都是英文，那么请忽略，字体的路径可以是相对路径，也可以是你的系统字体\n\nimage_colors = ImageColorGenerator(alice_coloring)\nplt.imshow(my_wordcloud.recolor(color_func=image_colors))\nplt.imshow(my_wordcloud)\nplt.axis(\"off\")\nplt.show()\ntime.sleep(3)\nplt.close()\t#图片关闭后将图片发送至手机,保存图片，并发送至手机\nmy_wordcloud.to_file(os.path.join(d, \"wechat_cloud.png\"))\nitchat.send_image(\"wechat_cloud.png\", 'filehelper')\n```\n至此，打开你的手机，进入到文件传输助手，你会收到一张图片，这就是使用微信好友昵称制作的词云，下面附上一张我本人的\n![这里写图片描述](http://img.blog.csdn.net/20170721154128645?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n![这里写图片描述](http://img.blog.csdn.net/20170721154156691?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n","slug":"hexo_config","published":1,"date":"2018-01-16T09:49:54.921Z","updated":"2018-01-16T09:49:54.897Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcihuyec0001wc9ouv7vt4xo","content":"<p>最近看到网上有人用Python获取微信的一些信息，感觉挺有意思，对于我一个Python刚入门的人来说，正需要一些代码片段来激起我的兴趣，所以自己也写了一些，废话不多说，直接上代码！！！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">coding:utf-8</span><br><span class=\"line\">微信好友昵称WordCloud</span><br><span class=\"line\">import itchat</span><br><span class=\"line\">import re</span><br><span class=\"line\">import os</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">from wordcloud import WordCloud, ImageColorGenerator</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import PIL.Image as Image</span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import time</span><br><span class=\"line\">#以上是我用到的一些库，这些根据个人不同需要安装某些库</span><br><span class=\"line\"></span><br><span class=\"line\">#运行到此处会自动生成一个二维码，打开手机微信，扫一扫即可登录</span><br><span class=\"line\">itchat.login()\t</span><br><span class=\"line\">friends = itchat.get_friends(update=True)[0:]</span><br><span class=\"line\">tList = []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">for i in friends:</span><br><span class=\"line\">\t#用正则表达式过滤掉 span ，class，emoji。NickName表示微信好友的昵称；</span><br><span class=\"line\">\tsignature = i[&quot;NickName&quot;].strip().replace(&quot;span&quot;,&quot;&quot;).replace(&quot;class&quot;,&quot;&quot;).replace(&quot;emoji&quot;,&quot;&quot;)</span><br><span class=\"line\">\trep = re.compile(&quot;1f\\d.+&quot;)</span><br><span class=\"line\">\tsignature = rep.sub(&quot;&quot;,signature)</span><br><span class=\"line\">\tprint signature</span><br><span class=\"line\">\ttList.append(signature)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#拼接字符串</span><br><span class=\"line\">text = &quot;&quot;.join(tList)</span><br><span class=\"line\"></span><br><span class=\"line\">#jieba分词</span><br><span class=\"line\">wordlist_jieba = jieba.cut(text,cut_all=True)</span><br><span class=\"line\">wl_space_split = &quot; &quot;.join(wordlist_jieba)</span><br><span class=\"line\"></span><br><span class=\"line\">#wordcloud</span><br><span class=\"line\">d = os.path.dirname(__file__)</span><br><span class=\"line\">alice_coloring = np.array(Image.open(os.path.join(d,&quot;hot.png&quot;)))\t#设置一个背景图片，文章中会附上</span><br><span class=\"line\">my_wordcloud = WordCloud(background_color=&quot;white&quot;,max_words=2000,mask=alice_coloring,max_font_size=37, random_state=42,</span><br><span class=\"line\">font_path=&quot;./handan.ttf&quot;).generate(wl_space_split)\t</span><br><span class=\"line\">#此处使用的字体一定是支持中文的字体，当然，如果你确定你好友的昵称都是英文，那么请忽略，字体的路径可以是相对路径，也可以是你的系统字体</span><br><span class=\"line\"></span><br><span class=\"line\">image_colors = ImageColorGenerator(alice_coloring)</span><br><span class=\"line\">plt.imshow(my_wordcloud.recolor(color_func=image_colors))</span><br><span class=\"line\">plt.imshow(my_wordcloud)</span><br><span class=\"line\">plt.axis(&quot;off&quot;)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">time.sleep(3)</span><br><span class=\"line\">plt.close()\t#图片关闭后将图片发送至手机,保存图片，并发送至手机</span><br><span class=\"line\">my_wordcloud.to_file(os.path.join(d, &quot;wechat_cloud.png&quot;))</span><br><span class=\"line\">itchat.send_image(&quot;wechat_cloud.png&quot;, &apos;filehelper&apos;)</span><br></pre></td></tr></table></figure>\n<p>至此，打开你的手机，进入到文件传输助手，你会收到一张图片，这就是使用微信好友昵称制作的词云，下面附上一张我本人的<br><img src=\"http://img.blog.csdn.net/20170721154128645?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20170721154156691?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近看到网上有人用Python获取微信的一些信息，感觉挺有意思，对于我一个Python刚入门的人来说，正需要一些代码片段来激起我的兴趣，所以自己也写了一些，废话不多说，直接上代码！！！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">coding:utf-8</span><br><span class=\"line\">微信好友昵称WordCloud</span><br><span class=\"line\">import itchat</span><br><span class=\"line\">import re</span><br><span class=\"line\">import os</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">from wordcloud import WordCloud, ImageColorGenerator</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import PIL.Image as Image</span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import time</span><br><span class=\"line\">#以上是我用到的一些库，这些根据个人不同需要安装某些库</span><br><span class=\"line\"></span><br><span class=\"line\">#运行到此处会自动生成一个二维码，打开手机微信，扫一扫即可登录</span><br><span class=\"line\">itchat.login()\t</span><br><span class=\"line\">friends = itchat.get_friends(update=True)[0:]</span><br><span class=\"line\">tList = []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">for i in friends:</span><br><span class=\"line\">\t#用正则表达式过滤掉 span ，class，emoji。NickName表示微信好友的昵称；</span><br><span class=\"line\">\tsignature = i[&quot;NickName&quot;].strip().replace(&quot;span&quot;,&quot;&quot;).replace(&quot;class&quot;,&quot;&quot;).replace(&quot;emoji&quot;,&quot;&quot;)</span><br><span class=\"line\">\trep = re.compile(&quot;1f\\d.+&quot;)</span><br><span class=\"line\">\tsignature = rep.sub(&quot;&quot;,signature)</span><br><span class=\"line\">\tprint signature</span><br><span class=\"line\">\ttList.append(signature)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#拼接字符串</span><br><span class=\"line\">text = &quot;&quot;.join(tList)</span><br><span class=\"line\"></span><br><span class=\"line\">#jieba分词</span><br><span class=\"line\">wordlist_jieba = jieba.cut(text,cut_all=True)</span><br><span class=\"line\">wl_space_split = &quot; &quot;.join(wordlist_jieba)</span><br><span class=\"line\"></span><br><span class=\"line\">#wordcloud</span><br><span class=\"line\">d = os.path.dirname(__file__)</span><br><span class=\"line\">alice_coloring = np.array(Image.open(os.path.join(d,&quot;hot.png&quot;)))\t#设置一个背景图片，文章中会附上</span><br><span class=\"line\">my_wordcloud = WordCloud(background_color=&quot;white&quot;,max_words=2000,mask=alice_coloring,max_font_size=37, random_state=42,</span><br><span class=\"line\">font_path=&quot;./handan.ttf&quot;).generate(wl_space_split)\t</span><br><span class=\"line\">#此处使用的字体一定是支持中文的字体，当然，如果你确定你好友的昵称都是英文，那么请忽略，字体的路径可以是相对路径，也可以是你的系统字体</span><br><span class=\"line\"></span><br><span class=\"line\">image_colors = ImageColorGenerator(alice_coloring)</span><br><span class=\"line\">plt.imshow(my_wordcloud.recolor(color_func=image_colors))</span><br><span class=\"line\">plt.imshow(my_wordcloud)</span><br><span class=\"line\">plt.axis(&quot;off&quot;)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">time.sleep(3)</span><br><span class=\"line\">plt.close()\t#图片关闭后将图片发送至手机,保存图片，并发送至手机</span><br><span class=\"line\">my_wordcloud.to_file(os.path.join(d, &quot;wechat_cloud.png&quot;))</span><br><span class=\"line\">itchat.send_image(&quot;wechat_cloud.png&quot;, &apos;filehelper&apos;)</span><br></pre></td></tr></table></figure>\n<p>至此，打开你的手机，进入到文件传输助手，你会收到一张图片，这就是使用微信好友昵称制作的词云，下面附上一张我本人的<br><img src=\"http://img.blog.csdn.net/20170721154128645?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20170721154156691?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n"},{"date":"2017-04-02T11:04:11.000Z","title":"linux中使用touch修改文件的时间","_content":"\n\nliunx中使用touch命令更改文件的时间\n------------------------\n\n 1. 首先介绍下Linux系统中文件的三个时间\n\n\t\t1）modification time (mtime,修改时间)：这个时间指的是文件内容修改的时间，而不是文件属性的修改，当数据内容修改时，这个时间就会改变，用命令ls -l默认显示的就是这个时间。\n\t\t    \n\t\t2）status time （ctime,状态时间）：当一个文件的状态改变时，这个时间就会改变，例如更改了文件的权限与属性等，它就会改变。\n\t\t\n\t\t3）access time （atime,访问时间）：当读取文件内容时，就会更改这个时间，例如使用cat 去读取/etc/man.config,那么该文件的atime就会改变。\n\n 2. touch的用法为：\n\n\t     touch [-actmd] 文件\n\t\n\t     参数：\n\t\n\t     -a:仅修改access time\n\t\n\t     -c:仅修改时间而不建立文件\n\t\n\t     -t:后面可以接时间，格式为：[[CC]YY]MMDDhhmm [.SS]\n\t\t\t\t     *该参数修改的是访问时间和修改时间*\n\n\t\t\t\tCC - 年份的前两位 \n\t\t\t\tYY - 年份的后两位 \n\t\t\t\tMM - 月份 [01-12]\n\t\t\t\tDD - 日期 [01-31]\n\t\t\t\thh - 时 [00-23]\n\t\t\t\tmm - 分 [00-59]\n\t\t\t\tSS - 秒 [00-61]\n\n\t\n\t     -m:仅修改mtime\n\t\n\t     -d:后面可以接日期，也可以使用--date=\"日期或时间\"\n\n\t\t\n\n","source":"_posts/linux_touch_time.md","raw":"---\ndate: 2017-04-02 19:04:11\ntitle: linux中使用touch修改文件的时间\ntags: linux\ncategories: linux\n\n---\n\n\nliunx中使用touch命令更改文件的时间\n------------------------\n\n 1. 首先介绍下Linux系统中文件的三个时间\n\n\t\t1）modification time (mtime,修改时间)：这个时间指的是文件内容修改的时间，而不是文件属性的修改，当数据内容修改时，这个时间就会改变，用命令ls -l默认显示的就是这个时间。\n\t\t    \n\t\t2）status time （ctime,状态时间）：当一个文件的状态改变时，这个时间就会改变，例如更改了文件的权限与属性等，它就会改变。\n\t\t\n\t\t3）access time （atime,访问时间）：当读取文件内容时，就会更改这个时间，例如使用cat 去读取/etc/man.config,那么该文件的atime就会改变。\n\n 2. touch的用法为：\n\n\t     touch [-actmd] 文件\n\t\n\t     参数：\n\t\n\t     -a:仅修改access time\n\t\n\t     -c:仅修改时间而不建立文件\n\t\n\t     -t:后面可以接时间，格式为：[[CC]YY]MMDDhhmm [.SS]\n\t\t\t\t     *该参数修改的是访问时间和修改时间*\n\n\t\t\t\tCC - 年份的前两位 \n\t\t\t\tYY - 年份的后两位 \n\t\t\t\tMM - 月份 [01-12]\n\t\t\t\tDD - 日期 [01-31]\n\t\t\t\thh - 时 [00-23]\n\t\t\t\tmm - 分 [00-59]\n\t\t\t\tSS - 秒 [00-61]\n\n\t\n\t     -m:仅修改mtime\n\t\n\t     -d:后面可以接日期，也可以使用--date=\"日期或时间\"\n\n\t\t\n\n","slug":"linux_touch_time","published":1,"updated":"2018-01-17T03:04:39.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcihuyfc0003wc9ovos8wzyq","content":"<h2 id=\"liunx中使用touch命令更改文件的时间\"><a href=\"#liunx中使用touch命令更改文件的时间\" class=\"headerlink\" title=\"liunx中使用touch命令更改文件的时间\"></a>liunx中使用touch命令更改文件的时间</h2><ol>\n<li><p>首先介绍下Linux系统中文件的三个时间</p>\n<pre><code>1）modification time (mtime,修改时间)：这个时间指的是文件内容修改的时间，而不是文件属性的修改，当数据内容修改时，这个时间就会改变，用命令ls -l默认显示的就是这个时间。\n\n2）status time （ctime,状态时间）：当一个文件的状态改变时，这个时间就会改变，例如更改了文件的权限与属性等，它就会改变。\n\n3）access time （atime,访问时间）：当读取文件内容时，就会更改这个时间，例如使用cat 去读取/etc/man.config,那么该文件的atime就会改变。\n</code></pre></li>\n<li><p>touch的用法为：</p>\n<pre><code>touch [-actmd] 文件\n\n参数：\n\n-a:仅修改access time\n\n-c:仅修改时间而不建立文件\n\n-t:后面可以接时间，格式为：[[CC]YY]MMDDhhmm [.SS]\n            *该参数修改的是访问时间和修改时间*\n\n       CC - 年份的前两位 \n       YY - 年份的后两位 \n       MM - 月份 [01-12]\n       DD - 日期 [01-31]\n       hh - 时 [00-23]\n       mm - 分 [00-59]\n       SS - 秒 [00-61]\n</code></pre></li>\n</ol>\n<pre><code>-m:仅修改mtime\n\n-d:后面可以接日期，也可以使用--date=&quot;日期或时间&quot;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"liunx中使用touch命令更改文件的时间\"><a href=\"#liunx中使用touch命令更改文件的时间\" class=\"headerlink\" title=\"liunx中使用touch命令更改文件的时间\"></a>liunx中使用touch命令更改文件的时间</h2><ol>\n<li><p>首先介绍下Linux系统中文件的三个时间</p>\n<pre><code>1）modification time (mtime,修改时间)：这个时间指的是文件内容修改的时间，而不是文件属性的修改，当数据内容修改时，这个时间就会改变，用命令ls -l默认显示的就是这个时间。\n\n2）status time （ctime,状态时间）：当一个文件的状态改变时，这个时间就会改变，例如更改了文件的权限与属性等，它就会改变。\n\n3）access time （atime,访问时间）：当读取文件内容时，就会更改这个时间，例如使用cat 去读取/etc/man.config,那么该文件的atime就会改变。\n</code></pre></li>\n<li><p>touch的用法为：</p>\n<pre><code>touch [-actmd] 文件\n\n参数：\n\n-a:仅修改access time\n\n-c:仅修改时间而不建立文件\n\n-t:后面可以接时间，格式为：[[CC]YY]MMDDhhmm [.SS]\n            *该参数修改的是访问时间和修改时间*\n\n       CC - 年份的前两位 \n       YY - 年份的后两位 \n       MM - 月份 [01-12]\n       DD - 日期 [01-31]\n       hh - 时 [00-23]\n       mm - 分 [00-59]\n       SS - 秒 [00-61]\n</code></pre></li>\n</ol>\n<pre><code>-m:仅修改mtime\n\n-d:后面可以接日期，也可以使用--date=&quot;日期或时间&quot;\n</code></pre>"},{"date":"2017-11-19T14:13:00.000Z","title":"python使用爬虫获取json格式的网页，输出以及写入文件乱码","_content":"\n解决python使用爬虫获取json格式的网页，输出以及写入文件乱码的情况\n\n```\nimport codecs\n\nresp = requests.get(url,headers=headers)\nresult = json.dumps(resp.json(),ensure_ascii=False)\n#若不指定ensure_ascii=False，输出的是中文的ascii 字符码，而不是真正的中文。\n#这是因为json.dumps 序列化时对中文默认使用的ascii编码.想输出真正的中文需要指定ensure_ascii=False：\n\nfile1 = codecs.open(date+\"liujiqian.txt\",'a','utf-8')\t\n#将获取到的内容写到文件，以指定的编码方式打开文件，这样才能正常写入中文\nfile1.write(result)\nfile1.close()\n\n```\n","source":"_posts/pachong_luanma.md","raw":"---\ndate: 2017-11-19 22:13:00\n\ntitle: python使用爬虫获取json格式的网页，输出以及写入文件乱码\ntags: scarpy\ncategories: python\n---\n\n解决python使用爬虫获取json格式的网页，输出以及写入文件乱码的情况\n\n```\nimport codecs\n\nresp = requests.get(url,headers=headers)\nresult = json.dumps(resp.json(),ensure_ascii=False)\n#若不指定ensure_ascii=False，输出的是中文的ascii 字符码，而不是真正的中文。\n#这是因为json.dumps 序列化时对中文默认使用的ascii编码.想输出真正的中文需要指定ensure_ascii=False：\n\nfile1 = codecs.open(date+\"liujiqian.txt\",'a','utf-8')\t\n#将获取到的内容写到文件，以指定的编码方式打开文件，这样才能正常写入中文\nfile1.write(result)\nfile1.close()\n\n```\n","slug":"pachong_luanma","published":1,"updated":"2018-01-17T02:27:48.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcihuygi0007wc9oec9694xm","content":"<p>解决python使用爬虫获取json格式的网页，输出以及写入文件乱码的情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import codecs</span><br><span class=\"line\"></span><br><span class=\"line\">resp = requests.get(url,headers=headers)</span><br><span class=\"line\">result = json.dumps(resp.json(),ensure_ascii=False)</span><br><span class=\"line\">#若不指定ensure_ascii=False，输出的是中文的ascii 字符码，而不是真正的中文。</span><br><span class=\"line\">#这是因为json.dumps 序列化时对中文默认使用的ascii编码.想输出真正的中文需要指定ensure_ascii=False：</span><br><span class=\"line\"></span><br><span class=\"line\">file1 = codecs.open(date+&quot;liujiqian.txt&quot;,&apos;a&apos;,&apos;utf-8&apos;)\t</span><br><span class=\"line\">#将获取到的内容写到文件，以指定的编码方式打开文件，这样才能正常写入中文</span><br><span class=\"line\">file1.write(result)</span><br><span class=\"line\">file1.close()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>解决python使用爬虫获取json格式的网页，输出以及写入文件乱码的情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import codecs</span><br><span class=\"line\"></span><br><span class=\"line\">resp = requests.get(url,headers=headers)</span><br><span class=\"line\">result = json.dumps(resp.json(),ensure_ascii=False)</span><br><span class=\"line\">#若不指定ensure_ascii=False，输出的是中文的ascii 字符码，而不是真正的中文。</span><br><span class=\"line\">#这是因为json.dumps 序列化时对中文默认使用的ascii编码.想输出真正的中文需要指定ensure_ascii=False：</span><br><span class=\"line\"></span><br><span class=\"line\">file1 = codecs.open(date+&quot;liujiqian.txt&quot;,&apos;a&apos;,&apos;utf-8&apos;)\t</span><br><span class=\"line\">#将获取到的内容写到文件，以指定的编码方式打开文件，这样才能正常写入中文</span><br><span class=\"line\">file1.write(result)</span><br><span class=\"line\">file1.close()</span><br></pre></td></tr></table></figure>\n"},{"date":"2017-11-19T15:20:00.000Z","title":"python爬虫爬取ajax加载的动态内容","_content":"\n\n在使用python爬取网页内容的时候，发现请求到的内容和浏览器开发者工具上看到的不一样，\n经过一番百度，才发现该内容是使用ajax加载的内容：\n![浏览器上看到的数据](http://img.blog.csdn.net/20171231133004429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n![python请求到的数据](http://img.blog.csdn.net/20171231133037220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n两处相差甚远。\n\n最终在这里找到ajax请求的url\n![](http://img.blog.csdn.net/20171231133543138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n使用此地址完美请求到缺失的数据\n![请求到一组json数据](http://img.blog.csdn.net/20171231133956311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n","source":"_posts/python_pachong.md","raw":"---\n\ndate: 2017-11-19 23:20:00\ntitle: python爬虫爬取ajax加载的动态内容\ntags: python\ncategories: python\n\n---\n\n\n在使用python爬取网页内容的时候，发现请求到的内容和浏览器开发者工具上看到的不一样，\n经过一番百度，才发现该内容是使用ajax加载的内容：\n![浏览器上看到的数据](http://img.blog.csdn.net/20171231133004429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n![python请求到的数据](http://img.blog.csdn.net/20171231133037220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n两处相差甚远。\n\n最终在这里找到ajax请求的url\n![](http://img.blog.csdn.net/20171231133543138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n使用此地址完美请求到缺失的数据\n![请求到一组json数据](http://img.blog.csdn.net/20171231133956311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n","slug":"python_pachong","published":1,"updated":"2018-01-17T02:29:35.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcihuygv0009wc9oydes1n3k","content":"<p>在使用python爬取网页内容的时候，发现请求到的内容和浏览器开发者工具上看到的不一样，<br>经过一番百度，才发现该内容是使用ajax加载的内容：<br><img src=\"http://img.blog.csdn.net/20171231133004429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"浏览器上看到的数据\"></p>\n<p><img src=\"http://img.blog.csdn.net/20171231133037220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"python请求到的数据\"></p>\n<p>两处相差甚远。</p>\n<p>最终在这里找到ajax请求的url<br><img src=\"http://img.blog.csdn.net/20171231133543138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></p>\n<p>使用此地址完美请求到缺失的数据<br><img src=\"http://img.blog.csdn.net/20171231133956311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"请求到一组json数据\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在使用python爬取网页内容的时候，发现请求到的内容和浏览器开发者工具上看到的不一样，<br>经过一番百度，才发现该内容是使用ajax加载的内容：<br><img src=\"http://img.blog.csdn.net/20171231133004429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"浏览器上看到的数据\"></p>\n<p><img src=\"http://img.blog.csdn.net/20171231133037220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"python请求到的数据\"></p>\n<p>两处相差甚远。</p>\n<p>最终在这里找到ajax请求的url<br><img src=\"http://img.blog.csdn.net/20171231133543138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></p>\n<p>使用此地址完美请求到缺失的数据<br><img src=\"http://img.blog.csdn.net/20171231133956311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"请求到一组json数据\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjcihuygv0009wc9oydes1n3k","category_id":"cjcihuyfs0004wc9ofj7np1sw","_id":"cjcihuyi9000gwc9omifkqgpf"},{"post_id":"cjcihuyec0001wc9ouv7vt4xo","category_id":"cjcihuyfs0004wc9ofj7np1sw","_id":"cjcihuyif000jwc9o5yde36sb"},{"post_id":"cjcihuyfc0003wc9ovos8wzyq","category_id":"cjcihuyhv000bwc9obbmyjolx","_id":"cjcihuyih000lwc9olqpxr5um"},{"post_id":"cjcihuygi0007wc9oec9694xm","category_id":"cjcihuyfs0004wc9ofj7np1sw","_id":"cjcihuyij000owc9ot75bkaos"}],"PostTag":[{"post_id":"cjcihuyec0001wc9ouv7vt4xo","tag_id":"cjcihuygb0005wc9ol65g05y8","_id":"cjcihuyhz000dwc9ow91uky6o"},{"post_id":"cjcihuyfc0003wc9ovos8wzyq","tag_id":"cjcihuyhw000cwc9ooskwol82","_id":"cjcihuyif000kwc9odymkxqfn"},{"post_id":"cjcihuygi0007wc9oec9694xm","tag_id":"cjcihuyib000iwc9ovjvm04j8","_id":"cjcihuyii000nwc9ov7360ma9"},{"post_id":"cjcihuygv0009wc9oydes1n3k","tag_id":"cjcihuyii000mwc9oa706rlu4","_id":"cjcihuyij000pwc9of6v023mx"}],"Tag":[{"name":"wordcloud","_id":"cjcihuygb0005wc9ol65g05y8"},{"name":"linux","_id":"cjcihuyhw000cwc9ooskwol82"},{"name":"scarpy","_id":"cjcihuyib000iwc9ovjvm04j8"},{"name":"python","_id":"cjcihuyii000mwc9oa706rlu4"}]}}